# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kf-vXPXpRazkmpioR0eYCnkZxWDecBdh
"""

pip install cirq

import cirq_google
print(cirq_google.Sycamore)

import cirq

a = cirq.NamedQubit('s')
b = cirq.NamedQubit('j')

a, b, c = cirq.LineQubit.range(3)
d = cirq.LineQubit(6)
e = cirq.GridQubit(4, 5)


print(a)
print(b)
print(c)
print(d)
print(e)

import cirq
a = cirq.GridQubit(0, 1)
b = cirq.Circuit(
    cirq.X(a)**0.5,  
    cirq.measure(a, key='m')  
)
print("Circuit:")
print(b)

s = cirq.Simulator()
r = s.run(b, repetitions=10)
print("Results:")
print(r)

print(cirq.Circuit(cirq.SWAP(q, q + 1) for q in cirq.LineQubit.range(4)))

circuit = cirq.Circuit()
ops = [cirq.H(q) for q in cirq.LineQubit.range(5)]
circuit.append(ops)
print(circuit)

a = cirq.NamedQubit('amy')
b = cirq.NamedQubit('stacy')
c = cirq.NamedQubit('scarlet')

print(cirq.H(b))
print(cirq.CNOT(b, c))
print(cirq.CNOT(a, b))
print(cirq.H(a))
print(cirq.measure(a,b))

import cirq
cnot= cirq.CNOT
pauli= cirq.Z
sqrt1= cirq.X**0.5
sqrt2= cirq.YPowGate(exponent=0.25)
a, b= cirq.LineQubit.range(2)
swap= cirq.SQRT_ISWAP(a, b)
c= cnot(a, b)
d= pauli(a)
e= sqrt1(b)
f= sqrt2(a)
print(c)
print(d)
print(e)
print(f)
print(swap)

qubits = cirq.GridQubit.square(4)

print(qubits[0])
print(qubits)

x_gate = cirq.X
x_op = x_gate(qubits[1])

print(x_op)

cz = cirq.CZ(qubits[0], qubits[1])
x = cirq.X(qubits[2])
moment = cirq.Moment(x, cz)

print(moment)

cz01 = cirq.CZ(qubits[0], qubits[1])
x2 = cirq.X(qubits[2])
cz12 = cirq.CZ(qubits[1], qubits[2])
moment0 = cirq.Moment([cz01, x2])
moment1 = cirq.Moment([cz12])
circuit = cirq.Circuit((moment0, moment1))

print(circuit)